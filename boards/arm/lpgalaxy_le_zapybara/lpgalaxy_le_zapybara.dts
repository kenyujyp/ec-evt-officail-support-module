/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

#include <zephyr/dt-bindings/dt-util.h>
#include <zephyr/dt-bindings/adc/adc.h>
#include <zephyr/dt-bindings/gpio/nordic-nrf-gpio.h>

#include <dt-bindings/zmk/matrix_transform.h>
#include <physical_layouts.dtsi>

#include <freq.h>

&adc {
    status = "okay";

    #address-cells = <1>;
    #size-cells = <0>;

    channel@3 {
        reg = <3>;
        zephyr,gain = "ADC_GAIN_1_6";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 40)>;
        zephyr,resolution = <12>;
    };

    channel@1 {
        reg = <1>;
        zephyr,gain = "ADC_GAIN_1_6";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 3)>;
        zephyr,resolution = <12>;
    };
};

#define MUX(label)                      \
    label: label {                        \
    	compatible = "zmk,gpio-mux";            \
        gpio-controller;                        \
        #gpio-cells = <2>;                      \
    };


#define EC_MATRIX(_name)              \
    _name: _name {                                  \
        compatible = "zmk,kscan-ec-matrix";         \
        input-gpios                                 \
	        = <&left_mux 3 0>                   \
	        , <&left_mux 0 0>                   \
	        , <&left_mux 5 0>                   \
	        , <&left_mux 7 0>                   \
        ;                                           \
        io-channels = <&adc 1>;                     \
        matrix-relax-us = <3>;                      \
        matrix-warm-up-us = <500>;                  \
        adc-read-settle-us = <1>;                   \
        strobe-input-masks = <0 0>;  \
        sleep-after-secs = <10000>;                    \
        active-polling-interval-ms = <20>;           \
        idle-polling-interval-ms = <100>;             \
        sleep-polling-interval-ms = <4000>;            \
        dynamic-polling-interval;                   \
    };

/ {
    model = "Le Zapybara";
    compatible ="nordic,nrf52840";

    chosen {
        zmk,kscan = &matrix;
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
	    zerhyr,console = &cdc_acm_uart;
	    zerhyr,shell-uart = &cdc_acm_uart;
        zmk,battery = &vbatt;
	    zmk,physical-layout = &layout;
    };

    mux: mux {
		compatible = "zmk,gpio-mux";
		select-gpios
        = <&gpio1 13 GPIO_ACTIVE_HIGH>
        , <&gpio0 28  GPIO_ACTIVE_HIGH>
        , <&gpio0 3 GPIO_ACTIVE_HIGH>
        ;
        en-gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
		gpio-controller;
		ngpios = <4>;
	};

    matrix: matrix {
		compatible = "zmk,kscan-ec-matrix";

		matrix-relax-us = <800>;
		adc-read-settle-us = <1>;
		// trigger-percentage = <70>;
        io-channels = <&adc 1>;
        matrix-relax-us = <3>;
        matrix-warm-up-us = <500>;
        adc-read-settle-us = <1>;
        sleep-after-secs = <10000>;
        active-polling-interval-ms = <20>;
        idle-polling-interval-ms = <100>;
        sleep-polling-interval-ms = <4000>;
        dynamic-polling-interval;

		input-gpios
			= <&mux 3 0>
			, <&mux 0 0>
			, <&mux 5 0>
			, <&mux 7 0>
			;

		strobe-gpios
        = <&gpio1 11  (GPIO_ACTIVE_HIGH | NRF_GPIO_DRIVE_H0H1)>
        , <&gpio1 10 (GPIO_ACTIVE_HIGH | NRF_GPIO_DRIVE_H0H1)>
        ;

        drain-gpios = <&gpio0 30 (GPIO_ACTIVE_HIGH | NRF_GPIO_DRIVE_H0H1)>;
		matrix-warm-up-us = <500>;

		strobe-input-masks = <
			0
			0
            >;
	};

    vbatt: vbatt {
        compatible = "voltage-divider";
        io-channels = <&adc 3>;
        
        output-ohms = <2000000>;
        full-ohms = <(2000000 + 806000)>;
    };

    transform: transform {
        compatible = "zmk,matrix-transform";
        rows = <2>;
        columns = <4>;

        map = <
        RC(0,2) RC(0,3) RC(0,1) RC(0,0)
        RC(1,2) RC(1,3) RC(1,1) RC(1,0)    
        >;
    };


    layout: layout {
        compatible = "zmk,physical-layout";
	    display-name = "Standard";
	    transform = <&transform>;

	    keys  //                     w   h    x    y     rot    rx    ry
            = <&key_physical_attrs 100 100    0    0       0     0     0>
            , <&key_physical_attrs 100 100  100    0       0     0     0>
            , <&key_physical_attrs 100 100    0  100       0     0     0>
            , <&key_physical_attrs 100 100  100  100       0     0     0>
            , <&key_physical_attrs 100 100    0  200       0     0     0>
            , <&key_physical_attrs 100 100  100  200       0     0     0>
            , <&key_physical_attrs 100 100    0  300       0     0     0>
            , <&key_physical_attrs 100 100  100  300       0     0     0>
            ;
    };
};


&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};


zephyr_udc0: &usbd {
	status = "okay";
        cdc_acm_uart: cdc_acm_uart {
                compatible = "zephyr,cdc-acm-uart";
        };
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "mbr";
			reg = <0x00000000 0x00001000>;
		};
		code_partition: partition@1000 {
			label = "code_partition";
			reg = <0x00001000 0x000d3000>;
		};

		storage_partition: partition@d4000 {
			label = "storage";
			reg = <0x000d4000 0x00020000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};
